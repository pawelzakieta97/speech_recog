%MACIERZ CECH:
%   M(t, cecha, klasa):
%   cecha -     1 -moc,
%               2 -srednia czestotliwosc,
%               3- odchylenie std czestotliwosci,
%               4 -odchylenie std mocy wewnatrz zbioru uczacego,
%               5 -odchylenie std sredniej czestotliwosci,
%               6 -odchylenie std odchylenia std
%   klasa - 1, 2, 3

names = ["training/raz1.wav","training/raz2.wav","training/raz3.wav";...
    "training/dwa1.wav","training/dwa2.wav","training/dwa3.wav";...
    "training/trzy1.wav","training/trzy2.wav","training/trzy3.wav"];
samples = 10;   %number of samples in time considered
M = zeros(samples, 6, size(names,1));


for klasa = 1:size(names,1)
    for t_sample=1:size(names,2)
        name = char(names(klasa, t_sample));
        [y, Fs] = audioread(name);
        freq = abs(spectrogram(y, length(y)/64, 0, [],'yaxis'));
        freq = crop(freq);
        freq = imresize(size(freq, 1), samples);
        for t=1:samples
            M(t, 1, klasa) = M(t, 1, klasa) + sum(freq(:,t));
            M(t, 2, klasa) = M(t, 2, klasa) + myMean(freq(:,t));
            M(t, 3, klasat) = M(klasa, 3, t) + deviation(freq(:,t), M(klasa, 2, t));
        end
    end
    %   each sample is:
    %       -cropped to interesting region
    %       -rescaled to a constant number of samples
    %       -normalized so the mean is 0 and std div is 1
    
    M(klasa, 1, :) = normalize(M(klasa, 1, :));
    M(klasa, 2, :) = normalize(M(klasa, 2, :));
    M(klasa, 3, :) = normalize(M(klasa, 3, :));
    
end
figure;
plot(M(1, 2, :));